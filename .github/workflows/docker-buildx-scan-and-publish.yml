name: Build, Scan & Publish Docker Images

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      tag:
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  image-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Create local build (multi-platform export to local Docker)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          load: true # Load into local Docker daemon
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image_name }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image_name }}:v${{ inputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Scan Docker Image for vulnerabilities with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image_name }}:latest
          format: "github"
          output: "dependency-results.sbom.json"
          severity: "CRITICAL,HIGH"
          exit-code: "1" # fail build on high/critical

      - name: Upload Trivy SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-sbom
          path: dependency-results.sbom.json

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push multi-platform Docker image (only if scan passed)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image_name }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ inputs.image_name }}:v${{ inputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Replace cache for future builds
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
